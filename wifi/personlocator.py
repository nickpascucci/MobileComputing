#!/usr/bin/python
# Personlocator.py - Locate people!

def tokenize(line):
    line = line.replace(",", "") # Remove all commas, as they are unnecessary
    line = line.replace("(", "")
    line = line.replace(")", "")
    tokens = line.split(" ")
    return tokens

def parse_data(data_file):
    bssid = {}
    for line in data_file:
        tokens = tokenize(line)
        try:
            lat = float(tokens[0])
            lon = float(tokens[1])
        except:
            continue
        # Parse out the BSSIDs, add them to dict
        tuples = parse_bssid(tokens[2:])
        for hwid, sig_str in tuples:
            if not hwid in bssid:
                bssid[hwid] = [(sig_str, lat, lon)]
            else:
                bssid[hwid].append((sig_str, lat, lon))
    return bssid

def parse_bssid(tokens):
    tuples = []
    for i in range(0, len(tokens), 3):
        bssid = tokens[i+1]
        sig_str = int(tokens[i+2])
        tuples.append((bssid, sig_str))
    return tuples

def locate(bssid, strengths):
    """Locate a user based on network strength.

    Args:
      bssid - A dictionary generated by parse_data.
      strengths - A list of tuples of ('bssid', strength)
    """
    closest_tuples = []
    for hwid, strength in strengths:
        loc_data = bssid[hwid]
        closest_tuple = ()
        closest_delta = 10000
        for sig, lat, lon in loc_data:
            delta = abs(sig - strength)
            if delta < closest_delta:
                closest_delta = delta
                closest_tuple = (sig, lat, lon)
            elif delta == closest_delta and sig > closest_tuple[0]:
                closest_tuple = (sig, lat, lon)
        closest_tuples.append(closest_tuple)
    sum_lat = 0
    sum_lon = 0
    for sig, lat, lon in closest_tuples:
        sum_lat += lat
        sum_lon += lon
    avg_lat = sum_lat / len(closest_tuples)
    avg_lon = sum_lon / len(closest_tuples)
    return (avg_lat, avg_lon)

def get_strength_data():
    line = raw_input("Enter signal data: ")
    tokens = tokenize(line)
    data = []
    for i in range(0, len(tokens), 3):
        bssid = tokens[i+1]
        strength = tokens[i+2]
        data.append((bssid, int(strength)))
    return data

def main():
    data_file = open("WifiData.txt", "r")
    bssid = parse_data(data_file)
    str_data = get_strength_data()
    location = locate(bssid, str_data)
    print location

if __name__ == "__main__":
    main()
